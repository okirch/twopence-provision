application "kubic:nginx" {
	id			"nginx";
	vendor			"suse";
	os			"Leap-15.4";
	resources		"leap-15.4";
	features		"container";
	non-features		"systemd", "zypper";

	# This loads the application class from farthings/application/nginx.py
	# instantiates it and attaches it to the Target object for node server.
	# The test script can then access it via
	#       driver.server.nginx.doSomething()
	application-manager nginx {
		class-id        nginx;
	}

	imageset "latest" {
		architecture x86_64 {
			backend podman {
				image		"opensuse/nginx:latest";
				registry	"registry.opensuse.org";
			}
		}
	}

	backend podman {
		runtime {
			startup {
				success		"Starting nginx";
			}
			volumes {
				bind "/etc/nginx" {
					provide-as-resource "config";
				}
				bind "/srv/www/htdocs" {
					provide-as-resource "data";
				}
			}
			ports {
				port 80/tcp {
					provide-as-resource "http";
					# publish 80;
				}
				port 443/tcp {
					provide-as-resource "https";
					# publish 443;
				}
			}
		}
	}

	# application-resources get copied to status.conf as-is.
	#
	# They will be interpreted when connecting to the SUT, in the following
	# way
	#  - read the nginx resources from the normal platform definition
	#  - process application-resources from status.conf and overwrite
	#    attributes attributes with the values specified below.
	#
	# When the resource is activated, the resource will detect that a volume
	# has been specified and change the resource path to
	# f"{volume.mountpoint}/{path}"
	#
	# In addition, if the volume is a bind mount, the resource's host_path
	# will be set to the host-side path of the file/directory.
	# This is useful because it allows editing e.g. the config file while
	# the container is not running (which is in line with how the container
	# is actually supposed to be managed).
	application-resources {
		# This tells the application that the config file does not
		# live in its usual location, but inside the config volume.
		file	"nginx.conf" {
			volume		"config";
			path		"nginx.conf";
		}

		directory htdocs {
			volume		"data";
			path		"/";
		}
	}
}


