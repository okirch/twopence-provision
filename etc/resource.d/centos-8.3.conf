##################################################################
#
# OS specific resource definitions for CentOS
#
##################################################################

include "linux.conf";

subsystem shadow {
	packages	"passwd",
			"util-linux-user",
			"shadow-utils";
}

package passwd {
	# Reference resources from linux.conf
	file "system-passwd" {}
	file "system-group" {}

	executable passwd {}
}

package "util-linux-user" {
	executable chsh {}
	executable chfn {}
}

package "shadow-utils" {
	# Reference resources from linux.conf
	file "system-login.defs" {}
	file "system-shadow" {}

	executable chpasswd {
		expected-failure "fips-disabled-algorithms" {
			reason		"algorithm disabled by FIPS";
			feature		"fips";
			algorithm	"DES", "MD5";
		}
	}
}

package "sudo" {
	executable sudo {}
}

package "util-linux" {
	executable su {}
}

package "iputils" {
	executable ping {}
	executable tracepath {}
}

package "traceroute" {
	executable traceroute {}
	# this is usually a symlink to traceroute
	executable traceroute6 {}
}

package rpcbind {
	service rpcbind {
		executable		"rpcbind";
		systemd-unit		"rpcbind.service";
		systemd-activate	"rpcbind.socket";
	}

	executable rpcbind {}
	executable rpcinfo {}
}

subsystem at {
	packages "at";
}

package "at" {
	service atd {
		executable		"atd";
		systemd-unit		"atd.service";
	}

	executable atd {}
	executable at {}
	executable atq {}
	executable atrm {}
	executable batch {}
	executable atrun {}

	file "atjobs" {
		path		"/var/spool/at";
	}
	file "atsequence" {
		path		"/var/spool/at/.SEQ";
	}
	file "atspool" {
		path		"/var/spool/at/spool";
	}
}

subsystem cron {
	packages		"cronie";
}

package cronie {
	service cron {
		executable		"cron";
		systemd-unit		"crond.service";
	}

	executable cron {}
	executable crontab {}

	file "cron-spooldir" {
		path		"/var/spool/cron";
	}
}

package "bind-utils" {
	executable dig {}
}


subsystem ntp {
	packages "chrony";
}

package "chrony" {
	service ntp {
		executable		"ntpd";
		systemd-unit		"chronyd.service";
	}

	file ntp_conf {
		path			"/etc/chrony.conf";
		format			"chrony";
		dac-user		root;
		dac-group		chrony;
		dac-permissions		640;
	}

	file ntp_keys {
		path			"/etc/chrony.keys";
		format			"chrony";
		dac-user		root;
		dac-group		chrony;
		dac-permissions		600;
	}

	executable ntpd {
		executable		"chronyd";
	}

	executable ntpcontrol {
		executable		"chronyc";
	}
}

package openssl {
	executable openssl {
		expected-failure "disabled-algorithms" {
			reason			"algorithm disabled";
			algorithm		"gost";
		}

		expected-failure "fips-disabled-algorithms" {
			feature			"fips";
			reason			"algorithm disabled by FIPS";
			algorithm		"md4",
						"md5",
						"mdc2",
						"rmd160",
						# "sha1",
						"sm3",
						"gost",
						"aria-128-ecb",
						"aria-192-ecb",
						"bf",
						"camellia-128-ecb",
						"camellia-192-ecb",
						"camellia-256-ecb",
						"camellia-128-ecb",
						"cast",
						"cast5-ecb",
						"des",
						"des-ede",
						"desx",
						"rc2", "rc2-40-cbc", "rc2-64-cbc",
						"rc4",
						"seed",
						"sm4-ecb";
		}
	}
}

package audit {
	executable auditctl {}
	executable auditd {}

	service audit {
		executable		"auditd";
		systemd-unit		"auditd.service";
	}
}

package coreutils {
	executable tty {}
	executable stty {}
	executable logname {}
	executable hostid {}
	executable whoami {}
	executable sync {}
	executable who {}
	executable uptime {}
	executable users {}
	executable pwd {
		# Need to force the path of the executable; path lookup in ExectuableResrouce
		# currently uses "type -p pwd".
		# Which returns nothing when the command in question is a shell builtin...
		executable	"/usr/bin/pwd";
	}
}

subsystem ssh {
	packages		# "openssh",
				"openssh-clients",
				"openssh-server";
}

package openssh {
	executable "ssh-keygen" {}
}

package "openssh-clients" {
	file ssh_config {
		path		"/etc/ssh/ssh_config";
		format		"ssh-config-file";
	}
	executable ssh {}
	executable scp {}
	executable sftp {}
	executable "ssh-add" {}
	executable "ssh-agent" {}
	executable "ssh-copy-id" {}
	executable "ssh-keyscan" {}
}

package "openssh-server" {
	service ssh {
		executable		"sshd";
		systemd-unit		"sshd.service";
	}

	file sshd_config {
		path		"/etc/ssh/sshd_config";
		format		"ssh-config-file";
	}
	file pam_ssh {
		path		"/etc/pam.d/sshd";
		# format	"pam";
	}
	executable sshd {}
}
