# Base platform definition
platform "leap-15.3" {
	vendor		"suse";
	os		"Leap-15.3";
	resources	"leap-15.3";

	shell "install-repository" {
		script		"zypper";
		function	"zypper_add_repo";
	}
	shell "disable-repository" {
		command		"zypper mr -d";
	}
	shell "list-repositories" {
		command		"zypper lr";
	}
	shell "install-package" {
		command		"zypper in -y";
	}
	shell "install-pattern" {
		command		"zypper in -t pattern -y";
	}
	shell "install-suse-ca" {
		script		"suse-ca";
		function	"suse_install_cacert";
	}
	shell "update-kernel-commandline" {
		script		"suse-kernel";
		function	"update_kernel_commandline";
	}
	shell "start-service" {
		script		"systemd";
		function	"systemd_start_service";
	}

	# provisioning stages
	stage prep {
		only		once;
		perform
				# For some reason, the backports repo is causing
				# a zypper refresh error right now...
				"disable-repository repo-backports-update",

				"install-package wget",
				"install-package strace",

				# Without the SUSE CA key, we cannot talk to IBS
				"install-suse-ca 15.3",

				# Now add the twopence repository
				# "install-repository twopence",

				"list-repositories";
	}
	stage cleanup {
		only		build;
		run		"wicked";
	}

	imageset "Leap-15.3" {
		architecture x86_64 {
			backend vagrant {
				image		"opensuse/Leap-15.3.x86_64";
				url		"vagrant:opensuse/Leap-15.3.x86_64";
			}
		}

		architecture aarch64 {
			backend vagrant {
				image		"opensuse/Leap-15.3.aarch64";
				url		"vagrant:opensuse/Leap-15.3.aarch64";
			}
		}
	}

	repository "twopence" {
		url		"https://download.suse.de/ibs/home:/okir:/twopence/15.3";
		enabled		true;
	}
}

build selinux {
	# prep: install an extra repo and replace some packages
	stage prep {
		run	"selinux-okir";
	}

	stage build {
		run	"selinux";
	}

	stage relabel {
		reboot	True;
		run	"selinux-relabel";
	}

	backend vagrant {
		timeout		360;
	}

	# The following gets copied to the resulting platform def
	features	"selinux";
	resources	"leap-15.3-selinux";
}

build fips {
	shell "fips-check" {
		command	"sysctl -a | grep crypto.fips_enabled";
	}

	stage build {
		perform	"install-pattern fips",
			"update-kernel-commandline fips=1"
			;
	}

	stage relabel {
		reboot	True;
		perform	"fips-check";
	}

	backend vagrant {
		timeout		360;
	}

	# The following gets copied to the resulting platform def
	features	"fips";
}
